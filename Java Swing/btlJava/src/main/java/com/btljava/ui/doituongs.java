/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.btljava.ui;

import com.btljava.dao.impl.doituongDao;
import com.btljava.helper.DataValidor;
import com.btljava.helper.MessageDialog;
import com.btljava.helper.ShereData;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.btljava.model.doituong;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.runtime.Debug.id;
import static org.omg.CORBA.PolicyErrorCodeHelper.id;
/**
 *
 * @author ASUS
 */
public class doituongs extends javax.swing.JPanel {
    
    private DefaultTableModel model;
    private fromMain mains;
    public doituongs() {
        initComponents();
        
        initTable();
        
        loadDataTotable();
        
        phanquyen();
        
    }
    private void phanquyen(){
        String phanquyen = String.valueOf(ShereData.dangnhap.getPhanquyen());
        if(phanquyen.equals("2")){
            deletes.hide();
        }
        if(phanquyen.equals("3")){
            add.hide();
            edits.hide();
            deletes.hide();
            
        }
    }
    
    
    // Viết 1 hàm để hiển thị tên cột trên table
    private void initTable(){
        model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[] {"ID", "Mã loại", "Tên loại", "Ngày tạo"}); // Đặt tên cho các cột
        btlTable.setModel(model); // Hiển thị lên bảng
    }
    
    // Viết 1 hàm để hiển thị dữ liệu lên trên table
    private void loadDataTotable(){
        try{
            doituongDao dao = new doituongDao();
            List<doituong> list = dao.findAll();
            model.setRowCount(0);
            for(doituong id : list){
                model.addRow(new Object[]{
                    id.getId(), id.getMadoituong(), id.getTendoituong(), id.getNgaythem()
                });
            }
            model.fireTableDataChanged();
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tendoituong = new javax.swing.JTextField();
        ngaythem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        btlTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        timkiem = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        edits = new javax.swing.JButton();
        deletes = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        maloai = new javax.swing.JTextField();

        jLabel2.setText("Tên đối tượng");

        jLabel3.setText("Ngày thêm");

        btlTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        btlTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btlTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(btlTable);

        jLabel4.setText("Tìm kiếm");

        timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timkiemKeyReleased(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        edits.setText("Edit");
        edits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editsActionPerformed(evt);
            }
        });

        deletes.setText("Delete");
        deletes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletesActionPerformed(evt);
            }
        });

        jLabel5.setText("Mã loãi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(add)
                        .addGap(18, 18, 18)
                        .addComponent(edits)
                        .addGap(18, 18, 18)
                        .addComponent(deletes))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel5)))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(maloai, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tendoituong)
                            .addComponent(ngaythem, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(maloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tendoituong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ngaythem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(edits)
                    .addComponent(deletes))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        // TODO add your handling code here:
        Integer so = 0;
        StringBuilder bd = new StringBuilder();
        DataValidor.kiemtra(tendoituong, bd, "Tên đối tượng không được để trống");
        DataValidor.kiemtra(maloai, bd, "Tên đối tượng không được để trống");
        DataValidor.kiemtra(ngaythem, bd, "Ngày không được để trống");
        
        if(bd.length() > 0){
            MessageDialog.showMessageError(mains, bd.toString(), "Lỗi");
            return;
        }
        
        // Kiểm tra xem người dùng có nhập số vào ô text không, nếu người dùng nhập chuỗi thì sẽ báo lỗi
        if(maloai.getText().isEmpty()){ // Nếu người dùng để trống thì gán bằng "0"
            so = 0;
        }else{
            if(maloai.getText().chars().allMatch(Character::isDigit)){ // Kiểm tra nếu người dùng nhập vào số thì bắt đầu lấy giá trị và gán vào biến
                so = Integer.parseInt(maloai.getText());
            }else{ // Nếu người dùng nhập vào chuỗi thì in ra thông báo lỗi
                MessageDialog.showMessageError(mains, "Mã đối tượng phải là số", "Lỗi");
                return;
            }
        }
        
        try{
            doituong dt = new doituong();
            dt.setMadoituong(so);
            dt.setTendoituong(tendoituong.getText());
            dt.setNgaythem(ngaythem.getText());
            doituongDao dao = new doituongDao();
            if(dao.findBys(so) != null){
                if(MessageDialog.showConfirmDialog(mains, "Bản ghi này đã có bạn muốn cập nhật không( Trường chim bé )", "Thông báo") == JOptionPane.NO_OPTION){
                    return;
                }if(dao.update(dt)){
                    MessageDialog.showMessageDialog(mains, "Update dữ liệu thành công( Trường chim bé )", "Thông báo");
                     loadDataTotable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
            }else{
                if(dao.insert(dt)){
                    MessageDialog.showMessageDialog(mains, "Thêm dữ liệu thành công( Trường chim bé )", "Thông báo");
                     loadDataTotable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
            }
            
            
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_addActionPerformed

    private void editsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editsActionPerformed
        // TODO add your handling code here:
        addActionPerformed(evt);
    }//GEN-LAST:event_editsActionPerformed

    private void deletesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletesActionPerformed
        // TODO add your handling code here:
        StringBuilder bd = new StringBuilder();
        DataValidor.kiemtra(maloai, bd, "Mã loại không được để trống");
        if(bd.length() > 0){
            MessageDialog.showMessageError(mains, bd.toString(), "Lỗi");
            return;
        }
        if(MessageDialog.showConfirmDialog(mains, "Bạn chắc chắn muốn xóa bản ghi này không( Trường chim bé )?", "Thông báo") == JOptionPane.NO_OPTION){
                return;
            }
        try{
            doituongDao dao = new doituongDao();
            if(dao.delete(maloai.getText())){
                    MessageDialog.showMessageDialog(mains, "Xóa thành công( Trường chim bé )", "Thông báo");
                    loadDataTotable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_deletesActionPerformed

    
    private void loaddataTable(){
        try{
            doituongDao dao = new doituongDao();
            List<doituong> list = dao.findBy(timkiem.getText());
            model.setRowCount(0);
            for(doituong id : list){
                model.addRow(new Object[]{
                    id.getId(), id.getMadoituong(), id.getTendoituong(), id.getNgaythem()
                });
            }
            model.fireTableDataChanged();
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageDialog(mains, e.getMessage(), "Lỗi");
        }
        
        
    }
    private void timkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timkiemKeyReleased
        // TODO add your handling code here:
        String value = timkiem.getText();
        if(value.equals("")){
            loadDataTotable();
        }else{
            loaddataTable();
        }
       
    }//GEN-LAST:event_timkiemKeyReleased

    private void btlTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btlTableMouseClicked
        // TODO add your handling code here:
        
        // Khi người dùng click vào dữ liệu trong bảng thì sẽ hiển thị dữ liệu đó lên ô text
        try{
            int row = btlTable.getSelectedRow();
            
            if(row >= 0){ // Kiểm tra nếu mà người dùng click vào dữ liệu thì bắt đầu tìm kiếm và gán dữ liệu đó lên ô text
                int ids = (int) btlTable.getValueAt(row, 0);
                doituongDao dao = new doituongDao();
                doituong dt = dao.findByss(ids);
                
                // Chuyển đổi từ dữ liệu int sang chuỗi
                String value = String.valueOf(dt.getMadoituong()); // Chuyển đổi từ dữ liệu int sang chuỗi
                if(dt != null){
                    // Chuyển từ dữ liệu chuỗi sang kiểu dữ liệu int
                    //int i = Integer.parseInt(dt.getTendoituong());
                    maloai.setText(value);
                    tendoituong.setText(dt.getTendoituong());
                    ngaythem.setText(dt.getNgaythem());
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btlTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTable btlTable;
    private javax.swing.JButton deletes;
    private javax.swing.JButton edits;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maloai;
    private javax.swing.JTextField ngaythem;
    private javax.swing.JTextField tendoituong;
    private javax.swing.JTextField timkiem;
    // End of variables declaration//GEN-END:variables
}
