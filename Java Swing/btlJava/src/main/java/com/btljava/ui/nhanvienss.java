/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.btljava.ui;

import com.btljava.controller.BacSiController;
import com.btljava.controller.BenhNhanController;
import com.btljava.controller.NhanVienController;
import com.btljava.controller.TaiKhoanController;
import com.btljava.controller.YtaController;
import com.btljava.dao.impl.bacsiDao;
import com.btljava.dao.impl.benhnhanDao;
import com.btljava.dao.impl.nhanvienDao;
import com.btljava.dao.impl.taikhoanDao;
import com.btljava.dao.impl.ytaDao;
import com.btljava.helper.DataValidor;
import com.btljava.helper.MessageDialog;
import com.btljava.helper.ShereData;
import com.btljava.model.bacsi;
import com.btljava.model.benhnhan;
import com.btljava.model.nhanvien;
import com.btljava.model.taikhoan;
import com.btljava.model.yta;
import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class nhanvienss extends javax.swing.JDialog {
    private fromMain mains;
    private DefaultTableModel model;
    int ids = 0;
    
    private NhanVienController dao = new NhanVienController();
    private BacSiController daos = new BacSiController();
    private YtaController daoss = new YtaController();
    private TaiKhoanController daotk = new TaiKhoanController();
    private BenhNhanController daobn = new BenhNhanController();
    /**
     * Creates new form nhanvienss
     */
    public nhanvienss(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
    }
    private void tinkiem(){
        try{
//            nhanvienDao dao = new nhanvienDao();
            List<nhanvien> list = dao.timkiem(timkiems.getText());
            model.setRowCount(0);
            for(nhanvien nv : list){
                model.addRow(new Object[] {
                    nv.getId(), nv.getManhanvien(), nv.getHoten(), nv.getNgaysinh(), nv.getDiachi(), nv.getEmail(), nv.getGioitinh() == 1 ? "Nam" : "Nữ",
                    nv.getThanhtich(), nv.getNoicongtac(), nv.getChucvu_id(), nv.getNgayvao()
                });
            }
            
            model.fireTableDataChanged();
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "lỗi");
        }
    }
    
    private void phanquyen(){
        String phanquyen = String.valueOf(ShereData.dangnhap.getPhanquyen());
        if(phanquyen.equals("2")){
            deletes.hide();
        }
        if(phanquyen.equals("3")){
            add.hide();
            edits.hide();
            deletes.hide();
            
        }
    }

    private void initTable(){
        model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[] {"ID", "Mã nhân viên", "Họ tên", "Ngày sinh", "Địa chỉ", "Email", "Giới tình", "Thành tích", "Nơi công tác", "Mã chức vụ", "Ngày vào"});
        tblTable.setModel(model);
    }
    
    private void loadDataTable(){
        try{
//            nhanvienDao dao = new nhanvienDao();
            List<nhanvien> list = dao.fiindAll();
            model.setRowCount(0);
            for(nhanvien nv : list){
                model.addRow(new Object[]{
                    nv.getId(), nv.getManhanvien(), nv.getHoten(), nv.getNgaysinh(), nv.getDiachi(), nv.getEmail(), nv.getGioitinh() == 1 ? "Nam" : "Nữ",
                    nv.getThanhtich(), nv.getNoicongtac(), nv.getChucvu_id(), nv.getNgayvao()
                });
            }
            
            model.fireTableDataChanged();
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }
    
    // Đây là hàm kiểm tra định dạng email
    public static boolean patternMatches(String emailAddress, String regexPattern) {
        return Pattern.compile(regexPattern)
                .matcher(emailAddress)
                .matches();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manhanviens = new javax.swing.JTextField();
        hotens = new javax.swing.JTextField();
        diachis = new javax.swing.JTextField();
        ngaysinhs = new javax.swing.JTextField();
        emails = new javax.swing.JTextField();
        thanhtichs = new javax.swing.JTextField();
        noicongtacs = new javax.swing.JTextField();
        ngayvaos = new javax.swing.JTextField();
        chucvus = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        edits = new javax.swing.JButton();
        deletes = new javax.swing.JButton();
        timkiems = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        nam = new javax.swing.JRadioButton();
        nu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        quyen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        noicongtacs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noicongtacsActionPerformed(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã nhân viên");

        jLabel2.setText("Họ tên");

        jLabel3.setText("Ngày sinh");

        jLabel4.setText("Địa chỉ");

        jLabel5.setText("Email");

        jLabel6.setText("Giới tính");

        jLabel7.setText("Thành tích");

        jLabel8.setText("Nới công tác");

        jLabel9.setText("Mã chức vụ");

        jLabel10.setText("Ngày vào");

        edits.setText("Edit");
        edits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editsActionPerformed(evt);
            }
        });

        deletes.setText("Delete");
        deletes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletesActionPerformed(evt);
            }
        });

        timkiems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timkiemsKeyReleased(evt);
            }
        });

        jLabel11.setText("Tìm kiếm");

        nam.setText("Nam");

        nu.setText("Nữ");

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTable);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel12.setText("Nhân viên");

        quyen.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(57, 57, 57)
                        .addComponent(emails))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(49, 49, 49)
                        .addComponent(diachis))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(33, 33, 33)
                        .addComponent(ngaysinhs))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(51, 51, 51)
                        .addComponent(hotens))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(manhanviens, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(207, 207, 207)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ngayvaos)
                            .addComponent(chucvus)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noicongtacs))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nam)
                                .addGap(18, 18, 18)
                                .addComponent(nu))
                            .addComponent(thanhtichs, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(125, 125, 125))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(add)
                .addGap(107, 107, 107)
                .addComponent(edits)
                .addGap(82, 82, 82)
                .addComponent(deletes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timkiems, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(quyen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(quyen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(timkiems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(manhanviens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(hotens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ngaysinhs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(diachis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(emails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(edits)
                            .addComponent(deletes))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(nam)
                            .addComponent(nu))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(thanhtichs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(noicongtacs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(chucvus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(ngayvaos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noicongtacsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noicongtacsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noicongtacsActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();

        DataValidor.kiemtra(hotens, sb, "Họ tên không được để trống");
        DataValidor.kiemtra(manhanviens, sb, "Mã nhân viên không được để trống");
        DataValidor.kiemtra(ngaysinhs, sb, "Ngày sinh không được để trống");
        DataValidor.kiemtra(diachis, sb, "Địa chỉ không được để trống");
        DataValidor.kiemtra(emails, sb, "Email không được để trống");
        DataValidor.kiemtra(thanhtichs, sb, "Thành tích không được để trống");
        DataValidor.kiemtra(noicongtacs, sb, "Nơi công tác không được để trống");
        DataValidor.kiemtra(chucvus, sb, "Chức vụ không được để trống");
        DataValidor.kiemtra(ngayvaos, sb, "Ngày vào không được để trống");

        if(sb.length() > 0){
            MessageDialog.showMessageError(mains, sb.toString(), "Lỗi");
            return;
        }

        int manhanvien = 0;
        int chucvu = 0;

        if(manhanviens.getText().chars().allMatch(Character :: isDigit)){
            manhanvien = Integer.parseInt(manhanviens.getText());
        }if(chucvus.getText().chars().allMatch(Character :: isDigit)){
            chucvu = Integer.parseInt(chucvus.getText());
        }
        else{
            MessageDialog.showMessageError(mains, "Mã nhan viên viên và mã chức vụ phải là số", "lỗi");
            return;
        }
        
        String email = emails.getText();
        String check = "^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$"; // Khai báo định dạng chuẩn của "email"
        
        
        try {
            taikhoan tk = new taikhoan();
            tk.setTentaikhoan(manhanvien);
            tk.setMatkhau(manhanviens.getText());
            tk.setPhanquyen(2);
//            taikhoanDao daos = new taikhoanDao();
            daotk.insert(tk);
        } catch (Exception ex) {
            Logger.getLogger(nhanvienss.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
//            benhnhanDao daobn = new benhnhanDao();
            benhnhan bnd = daobn.findby(manhanviens.getText());
            if(bnd != null){
                MessageDialog.showMessageError(this, "Thông tin tài khoản này đã tồn tại bên bảng bệnh nhân", "Lỗi");
                return;
            }
            nhanvien nv = new nhanvien();
            nv.setManhanvien(manhanvien);
            nv.setHoten(hotens.getText());
            nv.setNgaysinh(ngaysinhs.getText());
            nv.setDiachi(diachis.getText());
            if(patternMatches(email, check)){
                nv.setEmail(email);
            }else{
                MessageDialog.showMessageError(this, "Sai dinh dang email", "Lỗi");
                return;
            }
            
            nv.setGioitinh(nam.isSelected()?1:0);
            nv.setThanhtich(thanhtichs.getText());
            nv.setNoicongtac(noicongtacs.getText());
            nv.setChucvu_id(chucvu);
            nv.setNgayvao(ngayvaos.getText());

//            nhanvienDao dao = new nhanvienDao();
            if(dao.findby(manhanviens.getText()) != null){
                if(chucvu == 12345){
                    bacsi bs = new bacsi();
                    //bs.setId(ids);
                    bs.setManhanvien(manhanvien);
                    bs.setHoten(hotens.getText());
                    bs.setNgaysinh(ngaysinhs.getText());
                    bs.setDiachi(diachis.getText());
                    if(patternMatches(email, check)){
                        bs.setEmail(email);
                    }else{
                        MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                        return;
                    }
                    
                    bs.setGioitinh(nam.isSelected()?1:0);
                    bs.setThanhtich(thanhtichs.getText());
                    bs.setNoicongtac(noicongtacs.getText());
                    bs.setChucvu_id(chucvu);
                    bs.setNgayvao(ngayvaos.getText());
//                    bacsiDao bsdao = new bacsiDao();
                    daos.updates(bs);
                }
                
                if(chucvu == 12345){
//                    bacsiDao bsd = new bacsiDao();
                    bacsi bs = daos.findby(manhanviens.getText());
                    if(bs == null){
                        bacsi bss = new bacsi();
                        bss.setManhanvien(manhanvien);
                        bss.setHoten(hotens.getText());
                        bss.setNgaysinh(ngaysinhs.getText());
                        bss.setDiachi(diachis.getText());
                        if(patternMatches(email, check)){
                            bss.setEmail(email);
                        }else{
                            MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                            return;
                        }
                        
                        bss.setGioitinh(nam.isSelected()?1:0);
                        bss.setThanhtich(thanhtichs.getText());
                        bss.setNoicongtac(noicongtacs.getText());
                        bss.setChucvu_id(chucvu);
                        bss.setNgayvao(ngayvaos.getText());
                        daos.insert(bss);
                    }
                }
                
                if(chucvu == 123456){
//                    ytaDao ytd = new ytaDao();
                    yta yt = daoss.findby(manhanviens.getText());
                    if(yt == null){
                        yta ytss = new yta();
                        ytss.setManhanvien(manhanvien);
                        ytss.setHoten(hotens.getText());
                        ytss.setNgaysinh(ngaysinhs.getText());
                        ytss.setDiachi(diachis.getText());
                        if(patternMatches(email, check)){
                            ytss.setEmail(email);
                        }else{
                            MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                            return;
                        }
                        ytss.setGioitinh(nam.isSelected()?1:0);
                        ytss.setThanhtich(thanhtichs.getText());
                        ytss.setNoicongtac(noicongtacs.getText());
                        ytss.setChucvu_id(chucvu);
                        ytss.setNgayvao(ngayvaos.getText());
                        daoss.insert(ytss);
                    }
                }
                if(chucvu == 123456){
                    yta yt = new yta();
                    //yt.setId(ids);
                    yt.setManhanvien(manhanvien);
                    yt.setHoten(hotens.getText());
                    yt.setNgaysinh(ngaysinhs.getText());
                    yt.setDiachi(diachis.getText());
                    if(patternMatches(email, check)){
                        yt.setEmail(email);
                    }else{
                        MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                        return;
                    }
                    
                    yt.setGioitinh(nam.isSelected()?1:0);
                    yt.setThanhtich(thanhtichs.getText());
                    yt.setNoicongtac(noicongtacs.getText());
                    yt.setChucvu_id(chucvu);
                    yt.setNgayvao(ngayvaos.getText());
//                    ytaDao ytd = new ytaDao();
                    daoss.updates(yt);
                }
                
                if(chucvu != 12345){
                    bacsiDao bsd = new bacsiDao();
                    bacsi bsn = bsd.findby(manhanviens.getText());
                    if(bsn != null){
                        if(MessageDialog.showConfirmDialog(this, "Bạn đang sửa mã chức vụ khác với mã chức vụ của bác sĩ đồng nghĩa với việc sửa bản ghi này xong thì bản ghi này bên bảng bác sĩ sẽ bị xóa đi", "Thông báo") == JOptionPane.NO_OPTION){
                            return;
                        }
                        
                        bsd.deletes(manhanviens.getText());
                    }
                }
                
                if(chucvu != 123456){
//                    ytaDao ytd = new ytaDao();
                    yta yt = daoss.findby(manhanviens.getText());
                    if(yt != null){
                        if(MessageDialog.showConfirmDialog(this, "Bạn đang sửa mã chức vụ khác với mã chức vụ của y tá đồng nghĩa với việc sửa bản ghi này xong thì bản ghi này bên bảng y tá sẽ bị xóa đi", "Thông báo") == JOptionPane.NO_OPTION){
                            return;
                        }
                        
                        daoss.deletes(manhanviens.getText());
                    }
                }
                
                if(MessageDialog.showConfirmDialog(mains, "Bạn muốn cập nhật không", "Thông báo") == JOptionPane.NO_OPTION){
                    return;
                }
                
                nhanvien nvs = new nhanvien();
                nvs.setId(ids);
                nvs.setManhanvien(manhanvien);
                nvs.setHoten(hotens.getText());
                nvs.setNgaysinh(ngaysinhs.getText());
                nvs.setDiachi(diachis.getText());
                if(patternMatches(email, check)){
                    nvs.setEmail(email);
                }else{
                    MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                    return;
                }
                
                nvs.setGioitinh(nam.isSelected()?1:0);
                nvs.setThanhtich(thanhtichs.getText());
                nvs.setNoicongtac(noicongtacs.getText());
                nvs.setChucvu_id(chucvu);
                nvs.setNgayvao(ngayvaos.getText());
                if(dao.update(nvs)){
                    MessageDialog.showMessageDialog(mains, "Update thành công", "Thông báo");
                    loadDataTable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
            }else{
                if(dao.insert(nv)){
                    if(chucvu == 12345){
                        bacsi checks = daos.findby(manhanviens.getText());
                        if(checks == null){
                            bacsiDao bsd = new bacsiDao();
                            bacsi bss = new bacsi();
                            bss.setManhanvien(manhanvien);
                            bss.setHoten(hotens.getText());
                            bss.setNgaysinh(ngaysinhs.getText());
                            bss.setDiachi(diachis.getText());
                            if(patternMatches(email, check)){
                                bss.setEmail(email);
                            }else{
                                MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                                return;
                            }

                            bss.setGioitinh(nam.isSelected()?1:0);
                            bss.setThanhtich(thanhtichs.getText());
                            bss.setNoicongtac(noicongtacs.getText());
                            bss.setChucvu_id(chucvu);
                            bss.setNgayvao(ngayvaos.getText());
                            daos.insert(bss);
                        }
//                       
                    }
                    if(chucvu == 123456){
                        yta checks = daoss.findby(manhanviens.getText());
                        if(checks == null){
                            yta ytss = new yta();
                            ytss.setManhanvien(manhanvien);
                            ytss.setHoten(hotens.getText());
                            ytss.setNgaysinh(ngaysinhs.getText());
                            ytss.setDiachi(diachis.getText());
                            if(patternMatches(email, check)){
                                ytss.setEmail(email);
                            }else{
                                MessageDialog.showMessageError(this, "Sai dinh dang email", "Loi");
                                return;
                            }
                            ytss.setGioitinh(nam.isSelected()?1:0);
                            ytss.setThanhtich(thanhtichs.getText());
                            ytss.setNoicongtac(noicongtacs.getText());
                            ytss.setChucvu_id(chucvu);
                            ytss.setNgayvao(ngayvaos.getText());
//                            ytaDao ytad = new ytaDao();
                            daoss.insert(ytss);
                        }
                        
                    }
                    
                    MessageDialog.showMessageDialog(mains, "Thêm dữ liệu thành công", "Thông báo");
                    loadDataTable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "lỗi");
        }
    }//GEN-LAST:event_addActionPerformed

    private void editsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editsActionPerformed
        // TODO add your handling code here:
        addActionPerformed(evt);
    }//GEN-LAST:event_editsActionPerformed

    private void deletesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletesActionPerformed
        // TODO add your handling code here:

        if(MessageDialog.showConfirmDialog(mains, "Bạn chắc chắn muốn xóa bản ghi này không", "Thông báo") == JOptionPane.NO_OPTION){
            return;
        }
            try{
                int chucvu = 0;
                chucvu = Integer.parseInt(chucvus.getText());
                
//                nhanvienDao dao = new nhanvienDao();
                nhanvien nv = new nhanvien();
                int manhanhvien = 0;
                manhanhvien = Integer.parseInt(manhanviens.getText());
                nv.setManhanvien(manhanhvien);
                
                if(chucvu == 12345){
//                        bacsiDao bsd = new bacsiDao();
                        String manhanvienss = String.valueOf(manhanhvien);
                        daos.deletes(manhanvienss);
                    }
                if(chucvu == 123456){
//                    ytaDao ytad = new ytaDao();
                    String manhanvienss = String.valueOf(manhanhvien);
                    daoss.deletes(manhanvienss);
                }
                String id = String.valueOf(ids);
                if(dao.delete(id)){
                    MessageDialog.showMessageDialog(mains, "Xóa thành công", "Thông báo");
                    String tentaikhoan = String.valueOf(manhanviens.getText());
//                    taikhoanDao daos = new taikhoanDao();
                    daotk.deleteName(tentaikhoan);
                    loadDataTable();
                }else{
                    MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
                }
            }catch(Exception e){
                e.printStackTrace();
                MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
            }
        

        
    }//GEN-LAST:event_deletesActionPerformed

    private void timkiemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timkiemsKeyReleased
        // TODO add your handling code here:
        String value = timkiems.getText();
        if(value.equals("")){
            loadDataTable();
        }else{
            tinkiem();
        }
    }//GEN-LAST:event_timkiemsKeyReleased

    private void tblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseClicked
        // TODO add your handling code here:
        int row = tblTable.getSelectedRow();
        try{
            if(row >= 0){
                ids = (int) tblTable.getValueAt(row, 0);
//                nhanvienDao dao = new nhanvienDao();
                nhanvien nv = dao.finbyid(ids);
                String manhanvien = String.valueOf(nv.getManhanvien());
                String chucvu = String.valueOf(nv.getChucvu_id());
                if(nv != null){
                    manhanviens.setText(manhanvien);
                    hotens.setText(nv.getHoten());
                    ngaysinhs.setText(nv.getNgaysinh());
                    diachis.setText(nv.getDiachi());
                    emails.setText(nv.getEmail());
                    nam.setSelected(nv.getGioitinh() == 1?true:false);
                    thanhtichs.setText(nv.getThanhtich());
                    noicongtacs.setText(nv.getNoicongtac());
                    chucvus.setText(chucvu);
                    ngayvaos.setText(nv.getNgayvao());
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblTableMouseClicked

    private void checkLogin(){
        int phanquyen = ShereData.dangnhapss.getPhanquyen();
        if(phanquyen == 1){
            quyen.setForeground(Color.red);
            quyen.setText("Admin");
        }
        if(phanquyen == 2){
            quyen.setForeground(Color.red);
            quyen.setText("Quản lý");
        }
        if(phanquyen == 3){
            quyen.setForeground(Color.red);
            quyen.setText("Bệnh nhân");
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        initTable();
        
        loadDataTable();
        
        phanquyen();
        checkLogin();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nhanvienss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nhanvienss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nhanvienss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nhanvienss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                nhanvienss dialog = new nhanvienss(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField chucvus;
    private javax.swing.JButton deletes;
    private javax.swing.JTextField diachis;
    private javax.swing.JButton edits;
    private javax.swing.JTextField emails;
    private javax.swing.JTextField hotens;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField manhanviens;
    private javax.swing.JRadioButton nam;
    private javax.swing.JTextField ngaysinhs;
    private javax.swing.JTextField ngayvaos;
    private javax.swing.JTextField noicongtacs;
    private javax.swing.JRadioButton nu;
    private javax.swing.JButton quyen;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField thanhtichs;
    private javax.swing.JTextField timkiems;
    // End of variables declaration//GEN-END:variables
}
