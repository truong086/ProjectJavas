/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.btljava.ui;

import com.btljava.dao.impl.giuongnguDao;
import com.btljava.helper.DataValidor;
import com.btljava.helper.MessageDialog;
import com.btljava.helper.ShereData;
import com.btljava.model.giuongngu;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class giuongngus extends javax.swing.JPanel {
    private DefaultTableModel model;
    private fromMain mains;
    int ids = 0;
    /**
     * Creates new form giuongngus
     */
    public giuongngus() {
        initComponents();
        
        initTable();
        
        loadDataTable();
        
        phanquyen();
    }
    
    private void phanquyen(){
        String phanquyen = String.valueOf(ShereData.dangnhap.getPhanquyen());
        if(phanquyen.equals("2")){
            deletes.hide();
        }
        if(phanquyen.equals("3")){
            add.hide();
            edits.hide();
            deletes.hide();
            
        }
    }
    
    private void initTable(){
        model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[] {
            "ID", "Giường id", "Bệnh nhân id", "Ngày nằm", "Ngày ra"
        });
        
        tblTable.setModel(model);
    }
    
    private void loadDataTable(){
        try{
            giuongnguDao dao = new giuongnguDao();
            List<giuongngu> list = dao.findAll();
            model.setRowCount(0);
            for(giuongngu gn : list){
                model.addRow(new Object[] {
                    gn.getId(), gn.getGiuong_id(), gn.getBenhnhan_id(), gn.getThoigiannam(), gn.getThoigianra()
                });
            }
            
            model.fireTableDataChanged();
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        magiuongngus = new javax.swing.JTextField();
        mabenhnhans = new javax.swing.JTextField();
        thoigiannams = new javax.swing.JTextField();
        thoigianras = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        timkiems = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        edits = new javax.swing.JButton();
        deletes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();

        jLabel1.setText("Mã giường ngủ");

        jLabel2.setText("Mã bệnh nhân");

        jLabel3.setText("Thời gian nằm");

        jLabel4.setText("Thời gian ra");

        jLabel5.setText("Tìm kiếm");

        timkiems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timkiemsKeyReleased(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        edits.setText("Edit");
        edits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editsActionPerformed(evt);
            }
        });

        deletes.setText("Delete");
        deletes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletesActionPerformed(evt);
            }
        });

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(magiuongngus, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mabenhnhans, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(thoigiannams, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(thoigianras, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(timkiems, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add)
                        .addGap(221, 221, 221)
                        .addComponent(edits)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletes)
                        .addGap(115, 115, 115))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(magiuongngus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thoigiannams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(thoigianras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mabenhnhans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(timkiems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(edits)
                    .addComponent(deletes))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseClicked
        // TODO add your handling code here:
        try{
            int row = tblTable.getSelectedRow();
            if(row >= 0){
                ids = (int) tblTable.getValueAt(row, 0);
                giuongnguDao dao = new giuongnguDao();
                giuongngu gn = dao.findbyid(ids);
                String giuongnguid = String.valueOf(gn.getGiuong_id());
                String benhnhanid = String.valueOf(gn.getBenhnhan_id());
                if(gn != null){
                    magiuongngus.setText(giuongnguid);
                    mabenhnhans.setText(benhnhanid);
                    thoigiannams.setText(gn.getThoigiannam());
                    thoigianras.setText(gn.getThoigianra());
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_tblTableMouseClicked

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        int benhnhan = 0;
        int giuongngu = 0;
        
        StringBuilder sb = new StringBuilder();
        
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        DataValidor.kiemtra(mabenhnhans, sb, "Mã bệnh nhân không được để trống");
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        
        if(sb.length() > 0){
            MessageDialog.showMessageError(mains, sb.toString(), "Lỗi");
            return;
        }
        
        if(magiuongngus.getText().chars().allMatch(Character :: isDigit) && mabenhnhans.getText().chars().allMatch(Character :: isDigit)){
            giuongngu = Integer.parseInt(magiuongngus.getText());
            benhnhan = Integer.parseInt(mabenhnhans.getText());
        }else{
            MessageDialog.showMessageError(mains, "Mã bệnh nhân và mã giường nằm phải là số", "Lỗi");
            return;
        }
        
        try{
            giuongngu gn = new giuongngu();
            gn.setGiuong_id(giuongngu);
            gn.setBenhnhan_id(benhnhan);
            gn.setThoigiannam(thoigiannams.getText());
            gn.setThoigianra(thoigianras.getText());
            giuongnguDao dao = new giuongnguDao();
            if(dao.insert(gn)){
                MessageDialog.showMessageDialog(mains, "Thêm dữ liệu thành công", "Lỗi");
                loadDataTable();
            }else{
                MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_addActionPerformed

    private void editsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editsActionPerformed
        // TODO add your handling code here:
        
        int benhnhan = 0;
        int giuongngu = 0;
        
        StringBuilder sb = new StringBuilder();
        
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        DataValidor.kiemtra(mabenhnhans, sb, "Mã bệnh nhân không được để trống");
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        DataValidor.kiemtra(magiuongngus, sb, "Mã giường ngủ không được để trống");
        
        if(sb.length() > 0){
            MessageDialog.showMessageError(mains, sb.toString(), "Lỗi");
            return;
        }
        
        if(magiuongngus.getText().chars().allMatch(Character :: isDigit) && mabenhnhans.getText().chars().allMatch(Character :: isDigit)){
            giuongngu = Integer.parseInt(magiuongngus.getText());
            benhnhan = Integer.parseInt(mabenhnhans.getText());
        }else{
            MessageDialog.showMessageError(mains, "Mã bệnh nhân và mã giường nằm phải là số", "Lỗi");
            return;
        }
        
        try{
            giuongngu gn = new giuongngu();
            gn.setId(ids);
            gn.setBenhnhan_id(benhnhan);
            gn.setGiuong_id(giuongngu);
            gn.setThoigiannam(thoigiannams.getText());
            gn.setThoigianra(thoigianras.getText());
            giuongnguDao dao = new giuongnguDao();
            if(dao.update(gn)){
                MessageDialog.showMessageDialog(mains, "Update liệu thành công", "Lỗi");
                loadDataTable();
            }else{
                MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_editsActionPerformed

    private void deletesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletesActionPerformed
        // TODO add your handling code here:
        
        if(MessageDialog.showConfirmDialog(mains, "Bạn chắc chắn muốn xóa bản ghi không", "Lỗi") == JOptionPane.NO_OPTION){
            return;
        }
        
        try{
            giuongnguDao dao = new giuongnguDao();
            String id = String.valueOf(ids);
            if(dao.delete(id)){
                MessageDialog.showMessageDialog(mains, "Xóa bản ghi thành công", "Thông báo");
                loadDataTable();
            }else{
                MessageDialog.showMessageError(mains, "Đã có lỗi xảy ra", "Lỗi");
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_deletesActionPerformed

    private void timkiem(){
        try{
            giuongnguDao dao = new giuongnguDao();
            List<giuongngu> list = dao.timkiem(timkiems.getText());
            model.setRowCount(0);
            for(giuongngu gn : list){
                model.addRow(new Object[] {
                    gn.getId(), gn.getGiuong_id(), gn.getBenhnhan_id(), gn.getThoigiannam(), gn.getThoigianra()
                });
            }
        }catch(Exception e){
            e.printStackTrace();
            MessageDialog.showMessageError(mains, e.getMessage(), "Lỗi");
        }
    }
    private void timkiemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timkiemsKeyReleased
        // TODO add your handling code here:
        
        String value = timkiems.getText();
        if(value.equals("")){
            loadDataTable();
        }else{
            timkiem();
        }
    }//GEN-LAST:event_timkiemsKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton deletes;
    private javax.swing.JButton edits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mabenhnhans;
    private javax.swing.JTextField magiuongngus;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField thoigiannams;
    private javax.swing.JTextField thoigianras;
    private javax.swing.JTextField timkiems;
    // End of variables declaration//GEN-END:variables
}
